[{"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\index.tsx":"1","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\reportWebVitals.ts":"2","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s1-main\\App.tsx":"3","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw10\\bll\\store.ts":"4","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw01\\HW1.tsx":"5","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw10\\bll\\loadingReducer.ts":"6","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw12\\bll\\themeReducer.ts":"7","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw01\\message-sender\\MessageSender.tsx":"8","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw01\\friend-message\\FriendMessage.tsx":"9","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw01\\message\\Message.tsx":"10","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw02\\HW2.tsx":"11","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw02\\affairs\\Affairs.tsx":"12","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw02\\affairs\\affair\\Affair.tsx":"13","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw03\\HW3.tsx":"14","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw03\\GreetingContainer.tsx":"15","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw03\\Greeting.tsx":"16","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw04\\HW4.tsx":"17","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw04\\Stand.tsx":"18","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw04\\common\\c1-SuperInputText\\SuperInputText.tsx":"19","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw04\\common\\c3-SuperCheckbox\\SuperCheckbox.tsx":"20","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw04\\common\\c2-SuperButton\\SuperButton.tsx":"21"},{"size":752,"mtime":1669483463074,"results":"22","hashOfConfig":"23"},{"size":521,"mtime":1669483463074,"results":"24","hashOfConfig":"23"},{"size":724,"mtime":1669909963086,"results":"25","hashOfConfig":"23"},{"size":558,"mtime":1669483463104,"results":"26","hashOfConfig":"23"},{"size":2297,"mtime":1669483463074,"results":"27","hashOfConfig":"23"},{"size":480,"mtime":1669483463104,"results":"28","hashOfConfig":"23"},{"size":334,"mtime":1669483463112,"results":"29","hashOfConfig":"23"},{"size":2383,"mtime":1669483463074,"results":"30","hashOfConfig":"23"},{"size":1683,"mtime":1669483463074,"results":"31","hashOfConfig":"23"},{"size":1412,"mtime":1669483463074,"results":"32","hashOfConfig":"23"},{"size":3116,"mtime":1669483463082,"results":"33","hashOfConfig":"23"},{"size":2591,"mtime":1669483463083,"results":"34","hashOfConfig":"23"},{"size":1656,"mtime":1669483463083,"results":"35","hashOfConfig":"23"},{"size":2379,"mtime":1669482097091,"results":"36","hashOfConfig":"23"},{"size":2962,"mtime":1669482096915,"results":"37","hashOfConfig":"23"},{"size":2414,"mtime":1669482096749,"results":"38","hashOfConfig":"23"},{"size":873,"mtime":1669483463087,"results":"39","hashOfConfig":"23"},{"size":4214,"mtime":1669922032035,"results":"40","hashOfConfig":"23"},{"size":2815,"mtime":1669916058923,"results":"41","hashOfConfig":"23"},{"size":2052,"mtime":1669920495391,"results":"42","hashOfConfig":"23"},{"size":1475,"mtime":1669922512392,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uzo6p3",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\index.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\reportWebVitals.ts",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s1-main\\App.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw10\\bll\\store.ts",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw01\\HW1.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw10\\bll\\loadingReducer.ts",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw12\\bll\\themeReducer.ts",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw01\\message-sender\\MessageSender.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw01\\friend-message\\FriendMessage.tsx",["110"],[],"import React from 'react'\r\nimport s from './FriendMessage.module.css'\r\n\r\n// создать тип вместо any и отобразить приходящие данные\r\n\r\n\r\nexport type FriendMessagePropsType = {\r\n    message: {\r\n        id: number,\r\n        user: {\r\n            avatar: string,\r\n            name: string,\r\n        },\r\n        message: {\r\n            text: string,\r\n            time: string\r\n        }\r\n    }\r\n}\r\n\r\nconst FriendMessage = (props: FriendMessagePropsType) => {\r\n    return (\r\n        <div\r\n            id={'hw1-friend-message-' + props.message.id}\r\n            className={s.friendMessage}\r\n        >\r\n            <div className={s.friendImageAndText}>\r\n                <img\r\n                    id={'hw1-friend-avatar-' + props.message.id}\r\n                    src={props.message.user.avatar}\r\n                />\r\n                <div className={s.friendText}>\r\n                    <div\r\n                        id={'hw1-friend-name-' + props.message.id}\r\n                        className={s.friendName}\r\n                    >\r\n                        {props.message.user.name}\r\n                    </div>\r\n                    <pre\r\n                        id={'hw1-friend-text-' + props.message.id}\r\n                        className={s.friendMessageText}\r\n                    >\r\n                        {props.message.message.text}\r\n                    </pre>\r\n                </div>\r\n            </div>\r\n            <div\r\n                id={'hw1-friend-time-' + props.message.id}\r\n                className={s.friendTime}\r\n            >{props.message.message.time}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendMessage\r\n","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw01\\message\\Message.tsx",["111"],[],"import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\n// нужно создать правильный тип вместо any\r\nexport type MessagePropsType = {\r\n    message: {\r\n        id: number,\r\n        user: {\r\n            avatar: string,\r\n            name: string,\r\n        },\r\n        message: {\r\n            text: string,\r\n            time: string\r\n        }\r\n    }\r\n}\r\n\r\n// нужно отобразить приходящие данные\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div id={'hw1-message-' + props.message.id} className={s.message}>\r\n            <div className={s.imageAndText}>\r\n                <img\r\n                    id={'hw1-avatar-' + props.message.id}\r\n                    src={props.message.user.avatar}\r\n                />\r\n                <div className={s.text}>\r\n                    <div id={'hw1-name-' + props.message.id} className={s.name}>\r\n                        {props.message.user.name}\r\n                    </div>\r\n                    <pre id={'hw1-text-' + props.message.id} className={s.messageText}>\r\n                        {props.message.message.text}\r\n                    </pre>\r\n                </div>\r\n            </div>\r\n            <div id={'hw1-time-' + props.message.id} className={s.time}>\r\n                {props.message.message.time}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw02\\HW2.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw02\\affairs\\Affairs.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw02\\affairs\\affair\\Affair.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw03\\HW3.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw03\\GreetingContainer.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw03\\Greeting.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw04\\HW4.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw04\\Stand.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw04\\common\\c1-SuperInputText\\SuperInputText.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw04\\common\\c3-SuperCheckbox\\SuperCheckbox.tsx",[],[],"C:\\it-incubator\\Hometask 1-13\\hws2\\src\\s2-homeworks\\hw04\\common\\c2-SuperButton\\SuperButton.tsx",["112"],[],"import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\nimport {red} from \"@mui/material/colors\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    xType?: string\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        xType,\r\n        className,\r\n        disabled,\r\n        ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `\r\n    ${s.button} \r\n    ${disabled ? s.disabled : xType === 'red' ? s.red : xType === 'secondary' ? s.secondary : s.default} \r\n    ${className && s.className}`\r\n    // + (disabled\r\n    //         ? ...\r\n    //         : xType === 'red'\r\n    //             ? ...\r\n    // + (className ? ' ' + className : '') // задачка на смешивание классов\r\n\r\n    return (\r\n        <button\r\n            disabled={disabled}\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n",{"ruleId":"113","severity":1,"message":"114","line":28,"column":17,"nodeType":"115","endLine":31,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":24,"column":17,"nodeType":"115","endLine":27,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":3,"column":9,"nodeType":"118","messageId":"119","endLine":3,"endColumn":12},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'red' is defined but never used.","Identifier","unusedVar"]