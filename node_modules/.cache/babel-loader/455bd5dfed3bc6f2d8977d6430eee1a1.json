{"ast":null,"code":"import _slicedToArray from\"C:/it-incubator/Hometask 1-13/hws2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"C:/it-incubator/Hometask 1-13/hws2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React,{useState}from'react';import{v1}from'uuid';import s2 from'../../s1-main/App.module.css';import GreetingContainer from'./GreetingContainer';/*\r\n* 1 - описать тип UserType\r\n* 2 - указать нужный тип в useState с users\r\n* 3 - дописать типы и логику функции pureAddUserCallback и проверить её тестами\r\n* 4 - в файле GreetingContainer.tsx дописать типизацию пропсов\r\n* 5 - в файле GreetingContainer.tsx указать нужные типы в useState с name и error\r\n* 6 - в файле GreetingContainer.tsx дописать тип и логику функции setNameCallback\r\n* 7 - в файле GreetingContainer.tsx дописать логику функций pureAddUser, pureOnBlur, pureOnEnter и проверить их тестами\r\n* 8 - в файле GreetingContainer.tsx вычислить количество добавленных и имя последнего (totalUsers, lastUserName)\r\n* 9 - в файле Greeting.tsx дописать типизацию пропсов\r\n* 10 - в файле Greeting.tsx вычислить inputClass в зависимости от наличия ошибки\r\n* 11 - сделать стили в соответствии с дизайном\r\n* */ // types\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var pureAddUserCallback=function pureAddUserCallback(name,setUsers,users){// need to fix any\nvar user={// need to fix\n_id:v1(),name:name};setUsers([].concat(_toConsumableArray(users),[user]));};var HW3=function HW3(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];// need to fix any\nvar addUserCallback=function addUserCallback(name){// need to fix any\npureAddUserCallback(name,setUsers,users);};return/*#__PURE__*/_jsxs(\"div\",{id:'hw3',children:[/*#__PURE__*/_jsx(\"div\",{className:s2.hwTitle,children:\"Homework #3\"}),/*#__PURE__*/_jsx(\"div\",{className:s2.hw,children:/*#__PURE__*/_jsx(GreetingContainer,{users:users,addUserCallback:addUserCallback})})]});};export default HW3;","map":{"version":3,"names":["React","useState","v1","s2","GreetingContainer","pureAddUserCallback","name","setUsers","users","user","_id","HW3","addUserCallback","hwTitle","hw"],"sources":["C:/it-incubator/Hometask 1-13/hws2/src/s2-homeworks/hw03/HW3.tsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport {v1} from 'uuid'\r\nimport s2 from '../../s1-main/App.module.css'\r\nimport GreetingContainer from './GreetingContainer'\r\n\r\n/*\r\n* 1 - описать тип UserType\r\n* 2 - указать нужный тип в useState с users\r\n* 3 - дописать типы и логику функции pureAddUserCallback и проверить её тестами\r\n* 4 - в файле GreetingContainer.tsx дописать типизацию пропсов\r\n* 5 - в файле GreetingContainer.tsx указать нужные типы в useState с name и error\r\n* 6 - в файле GreetingContainer.tsx дописать тип и логику функции setNameCallback\r\n* 7 - в файле GreetingContainer.tsx дописать логику функций pureAddUser, pureOnBlur, pureOnEnter и проверить их тестами\r\n* 8 - в файле GreetingContainer.tsx вычислить количество добавленных и имя последнего (totalUsers, lastUserName)\r\n* 9 - в файле Greeting.tsx дописать типизацию пропсов\r\n* 10 - в файле Greeting.tsx вычислить inputClass в зависимости от наличия ошибки\r\n* 11 - сделать стили в соответствии с дизайном\r\n* */\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\nexport const pureAddUserCallback = (name: string, setUsers: Function, users: Array<UserType>) => { // need to fix any\r\n    const user = { // need to fix\r\n        _id: v1(),\r\n        name: name\r\n    }\r\n    setUsers([...users, user])\r\n}\r\n\r\nconst HW3 = () => {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        pureAddUserCallback(name, setUsers, users)\r\n    }\r\n\r\n    return (\r\n        <div id={'hw3'}>\r\n            <div className={s2.hwTitle}>Homework #3</div>\r\n            {/*для автоматической проверки дз (не менять)*/}\r\n\r\n            <div className={s2.hw}>\r\n                <GreetingContainer\r\n                    users={users}\r\n                    addUserCallback={addUserCallback}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n"],"mappings":"wPAAA,MAAOA,MAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,EAAR,KAAiB,MAAjB,CACA,MAAOC,GAAP,KAAe,8BAAf,CACA,MAAOC,kBAAP,KAA8B,qBAA9B,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,I,CAEA;wFAMA,MAAO,IAAMC,oBAAmB,CAAG,QAAtBA,oBAAsB,CAACC,IAAD,CAAeC,QAAf,CAAmCC,KAAnC,CAA8D,CAAE;AAC/F,GAAMC,KAAI,CAAG,CAAE;AACXC,GAAG,CAAER,EAAE,EADE,CAETI,IAAI,CAAEA,IAFG,CAAb,CAIAC,QAAQ,8BAAKC,KAAL,GAAYC,IAAZ,GAAR,CACH,CANM,CAQP,GAAME,IAAG,CAAG,QAANA,IAAM,EAAM,CACd,cAA0BV,QAAQ,CAAkB,EAAlB,CAAlC,wCAAOO,KAAP,eAAcD,QAAd,eAAwD;AAExD,GAAMK,gBAAe,CAAG,QAAlBA,gBAAkB,CAACN,IAAD,CAAkB,CAAE;AACxCD,mBAAmB,CAACC,IAAD,CAAOC,QAAP,CAAiBC,KAAjB,CAAnB,CACH,CAFD,CAIA,mBACI,aAAK,EAAE,CAAE,KAAT,wBACI,YAAK,SAAS,CAAEL,EAAE,CAACU,OAAnB,yBADJ,cAII,YAAK,SAAS,CAAEV,EAAE,CAACW,EAAnB,uBACI,KAAC,iBAAD,EACI,KAAK,CAAEN,KADX,CAEI,eAAe,CAAEI,eAFrB,EADJ,EAJJ,GADJ,CAaH,CApBD,CAsBA,cAAeD,IAAf"},"metadata":{},"sourceType":"module"}